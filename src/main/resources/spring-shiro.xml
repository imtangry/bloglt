<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!-- 继承自AuthorizingRealm的自定义Realm,指定Shiro验证用户登录 -->
    <bean id="myRealm" class="win.bloglt.common.shiro.MyRealm">
        <property name="credentialsMatcher" ref="passwordMatcher"/>
    </bean>
    <!--  自定义的加密类，需要实现shiro的接口，这样shiro才能操作你的加密进行登陆校验 -->
    <bean id="passwordMatcher" class="win.bloglt.common.shiro.MyCredentialsMatcher"/>

    <!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->
    <!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->
    <!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
    </bean>

    <!-- shiro过滤器配置 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/backstage/loginview"/>
        <!-- 登录成功后要跳转的连接(如果你已经在别的地方定义了此逻辑，这里就注释了) -->
         <property name="successUrl" value="/article/manager"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接，这里跳不过去，使用其他方式 -->
        <!--<property name="unauthorizedUrl" value="/error/403.html"/>-->
        <!-- Shiro连接约束配置,即过滤链的定义 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- 静态资源放过去-->
                /static/**=anon
                <!-- 登陆放过去-->
                /backstage/loginview=anon
                <!--/user/userinfo=authc-->
                <!--/user/userinfo=anon-->
            </value>
        </property>
    </bean>

    <!-- 管理shiro创建销毁运行，lifecycle -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>