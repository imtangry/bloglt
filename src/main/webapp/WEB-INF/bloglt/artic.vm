<!DOCTYPE html>
<html>

	<head>
		<meta charset="UTF-8">
		<title>汤的博客</title>
		<link rel="stylesheet" type="text/css" href="/bloglt-static-file/css/artic.css" />
		<link rel="stylesheet" type="text/css" href="/bloglt-static-file/css/common.css" />

		<script type="text/javascript" src="/bloglt-static-file/js/artic.js" charset="utf-8"></script>
	</head>

	<body>

		<div class="go_top">
			<a href="#top"></a>
		</div>
		<a name="top" id="top"></a>

		<div class="artic_head_nav">

			<ul class="head_nav_lists">
				<li>
					<a href="org-index.vm">首页</a>
				</li>
				<li>
					<a href="artic.vm" style="border-bottom: none;">日志</a>
				</li>
				<li>
					<a href="music.html">音乐</a>
				</li>
				<li>
					<a href="pics.html">图片</a>
				</li>
			</ul>
		</div>

		<div class="body_left">

			<h2 class="article_title"><a href="#" class="article_title_href">Java学习中遇到的各种问题(持续更新)</a></h2>
			<div class="article_details">
				<div class="date">日期：2017-05-11</div>
				<div class="tags">
					<a href="">Java</a>
				</div>
			</div>
			<div class="preArticle">
				
				<div class="preText">
					<p> 自动转换类型： 小范围自动像大的转byte—short—int（int符合大小适中可以往小的转）—long； char—int（int符合大小适中可以往小的转） ；int—double；float—double； 其中可能损失精度的：long—float/double;int—float;
					</p>
					<p> if不加{}执行仅限第一个语句。</p>
					<p> 栈堆：</p>
					<p>
						栈：自动分配连续的空间，存取速度比堆要快，栈内部多个值相等的变量是可以指向一个地址，后进先出。局部变量。 堆：不连续，new的对象。
					</p>
					<p>
						堆里的方法区：依然是堆，存放类的代码信息，static变量，常量池。</p>
					<p>static变量是类变量，类属性，静态变量，存在方法区，不在new的对象里生成，可直接调用； static方法同理。在方法区，可直接调用。
					</p>
					<p></p>
				</div>
			</div>
			<div class="more">
				<a href="#" class="more_href">more</a>
			</div>
		</div>
		<div class="body_left">
			<h2 class="article_title"><a href="#" class="article_title_href">Java学习中遇到的各种问题(持续更新)</a></h2>
			<div class="article_details">
				<div class="date">日期：2017-05-11</div>
				<div class="tags">
					<a href="">Java</a>
				</div>
			</div>
			<div class="preArticle">
			
				<div class="preText">
					<p> 自动转换类型： 小范围自动像大的转byte—short—int（int符合大小适中可以往小的转）—long； char—int（int符合大小适中可以往小的转） ；int—double；float—double； 其中可能损失精度的：long—float/double;int—float;
					</p>
					<p> if不加{}执行仅限第一个语句。</p>
					<p> 栈堆：</p>
					<p>
						栈：自动分配连续的空间，存取速度比堆要快，栈内部多个值相等的变量是可以指向一个地址，后进先出。局部变量。 堆：不连续，new的对象。
					</p>
					<p>
						堆里的方法区：依然是堆，存放类的代码信息，static变量，常量池。</p>
					<p>static变量是类变量，类属性，静态变量，存在方法区，不在new的对象里生成，可直接调用； static方法同理。在方法区，可直接调用。
					</p>
					<p></p>
				</div>
			</div>
			<div class="more">
				<a href="#" class="more_href">more</a>
			</div>
		</div>
		<div class="body_left">

			<h2 class="article_title"><a href="#" class="article_title_href">Java学习中遇到的各种问题(持续更新)</a></h2>
			<div class="article_details">
				<div class="date">日期：2017-05-11</div>
				<div class="tags">
					<a href="">Java</a>
				</div>
			</div>
			<div class="preArticle">

				<div class="preText">
					<p> 自动转换类型： 小范围自动像大的转byte—short—int（int符合大小适中可以往小的转）—long； char—int（int符合大小适中可以往小的转） ；int—double；float—double； 其中可能损失精度的：long—float/double;int—float;
					</p>
					<p> if不加{}执行仅限第一个语句。</p>
					<p> 栈堆：</p>
					<p>
						栈：自动分配连续的空间，存取速度比堆要快，栈内部多个值相等的变量是可以指向一个地址，后进先出。局部变量。 堆：不连续，new的对象。
					</p>
					<p>
						堆里的方法区：依然是堆，存放类的代码信息，static变量，常量池。</p>
					<p>static变量是类变量，类属性，静态变量，存在方法区，不在new的对象里生成，可直接调用； static方法同理。在方法区，可直接调用。
					</p>
					<p></p>
				</div>
			</div>
			<div class="more">
				<a href="#" class="more_href">more</a>
			</div>
		</div>
		<div class="body_left">
			<h2 class="article_title"><a href="#" class="article_title_href">Java学习中遇到的各种问题(持续更新)</a></h2>
			<div class="article_details">
				<div class="date">日期：2017-05-11</div>
				<div class="tags">
					<a href="">Java</a>
				</div>
			</div>
			<div class="preArticle">
	
				<div class="preText">
					<p> 自动转换类型： 小范围自动像大的转byte—short—int（int符合大小适中可以往小的转）—long； char—int（int符合大小适中可以往小的转） ；int—double；float—double； 其中可能损失精度的：long—float/double;int—float;
					</p>
					<p> if不加{}执行仅限第一个语句。</p>
					<p> 栈堆：</p>
					<p>
						栈：自动分配连续的空间，存取速度比堆要快，栈内部多个值相等的变量是可以指向一个地址，后进先出。局部变量。 堆：不连续，new的对象。
					</p>
					<p>
						堆里的方法区：依然是堆，存放类的代码信息，static变量，常量池。</p>
					<p>static变量是类变量，类属性，静态变量，存在方法区，不在new的对象里生成，可直接调用； static方法同理。在方法区，可直接调用。
					</p>
					<p></p>
				</div>
			</div>
			<div class="more">
				<a href="#" class="more_href">more</a>
			</div>
		</div>
		<div class="body_left">

			<h2 class="article_title"><a href="#" class="article_title_href">Java学习中遇到的各种问题(持续更新)</a></h2>
			<div class="article_details">
				<div class="date">日期：2017-05-11</div>
				<div class="tags">
					<a href="">Java</a>
				</div>
			</div>
			<div class="preArticle">
		
				<div class="preText">
					<p> 自动转换类型： 小范围自动像大的转byte—short—int（int符合大小适中可以往小的转）—long； char—int（int符合大小适中可以往小的转） ；int—double；float—double； 其中可能损失精度的：long—float/double;int—float;
					</p>
					<p> if不加{}执行仅限第一个语句。</p>
					<p> 栈堆：</p>
					<p>
						栈：自动分配连续的空间，存取速度比堆要快，栈内部多个值相等的变量是可以指向一个地址，后进先出。局部变量。 堆：不连续，new的对象。
					</p>
					<p>
						堆里的方法区：依然是堆，存放类的代码信息，static变量，常量池。</p>
					<p>static变量是类变量，类属性，静态变量，存在方法区，不在new的对象里生成，可直接调用； static方法同理。在方法区，可直接调用。
					</p>
					<p></p>
				</div>
			</div>
			<div class="more">
				<a href="#" class="more_href">more</a>
			</div>
		</div>

		<div id="footer">
		</div>
	</body>

</html>